/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Source;

import java.awt.FileDialog;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ADMIN
 */
public class Quan_Ly extends javax.swing.JFrame {

    FileDialog fd = new FileDialog(new JFrame(), "Xuất excel", FileDialog.SAVE);
    Dao dao = new Dao();
    ArrayList<Student> dataStudent = new ArrayList<>();
    
    ReadTags readtag;

    /**
     * Creates new form Quan_Ly
     */
    public Quan_Ly() {
        initComponents();
        this.setLocationRelativeTo(null);
        initTable();
        loadTableData();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        delete = new javax.swing.JLabel();
        addnew = new javax.swing.JLabel();
        edit = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        refresh = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        scan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setFont(new java.awt.Font("Arimo", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý hệ thống");

        jScrollPane1.setBackground(new java.awt.Color(254, 254, 254));

        table.setBackground(new java.awt.Color(254, 254, 254));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        delete.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 0, 102));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/delete.png"))); // NOI18N
        delete.setText("Xóa");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        addnew.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        addnew.setForeground(new java.awt.Color(0, 153, 255));
        addnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/plus.png"))); // NOI18N
        addnew.setText("Thêm mới");
        addnew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addnewMouseClicked(evt);
            }
        });

        edit.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/edit.png"))); // NOI18N
        edit.setText("Chỉnh Sửa");
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMouseClicked(evt);
            }
        });

        input.setFont(new java.awt.Font("Arimo", 0, 18)); // NOI18N
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Tìm kiếm nhanh: (id,tên,epc,..)");

        refresh.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        refresh.setForeground(new java.awt.Color(51, 102, 255));
        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/refresh.png"))); // NOI18N
        refresh.setText("Làm mới");
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/excel.png"))); // NOI18N
        jLabel2.setText("Xuất Báo Cáo");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        scan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        scan.setForeground(new java.awt.Color(255, 0, 0));
        scan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/icons8-palm-scan-50.png"))); // NOI18N
        scan.setText("Quét Thẻ");
        scan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        scan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(input)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(scan, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(addnew)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(edit)
                        .addComponent(refresh))
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scan, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn 1 hàng trong bảng");
            return;
        }
        String id = String.valueOf(table.getValueAt(selectedRow, 0));

        new Sua_Thong_Tin(id).setVisible(true);
    }//GEN-LAST:event_editMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn 1 hàng trong bảng");
            return;
        }
        String id = String.valueOf(table.getValueAt(selectedRow, 0));
        int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sinh viên có ID=" + id + " này không ? Mọi dữ liệu liên quan sẽ bị xóa !!!", "Cảnh báo", JOptionPane.YES_NO_OPTION);
        if (choose == 0) {
            if (dao.removeStudent(id)) {
                JOptionPane.showMessageDialog(null, "Xoá thành công");
                loadTableData();
                return;
            }
            JOptionPane.showMessageDialog(null, "Lỗi khi xoá");
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        // TODO add your handling code here:
        loadTableData();
        JOptionPane.showMessageDialog(null, "Đã làm mới bảng ");
    }//GEN-LAST:event_refreshMouseClicked

    private void addnewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addnewMouseClicked
        // TODO add your handling code here:
        new Them_SV().setVisible(true);
    }//GEN-LAST:event_addnewMouseClicked

    private void inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyReleased
        // TODO add your handling code here:
        String in = input.getText().toLowerCase();

        ArrayList<Student> search = new ArrayList<>();
        for (Student stu : dataStudent) {
            if (stu.getId().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getEPC().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getName().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getBirthday().contains(in)) {
                search.add(stu);
            } else if (stu.getClasses().toLowerCase().contains(in)) {
                search.add(stu);
            } else if ((stu.getSex() ? "nam" : "nữ").toLowerCase().contains(in)) {
                search.add(stu);
            }
        }

        deleteTable();
        DefaultTableModel defaultTable = (DefaultTableModel) table.getModel();
        for (Student stu : search) {
            Object[] item = {stu.getId(), stu.getEPC(), stu.getName(), stu.getBirthday(), stu.getSex() ? "Nam" : "Nữ", stu.getClasses(), stu.getIn(), stu.getOut()};
            defaultTable.addRow(item);
        }
    }//GEN-LAST:event_inputKeyReleased

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        //WriteExcel();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XuatBaoCao().setVisible(true);
            }
        });
    }//GEN-LAST:event_jLabel2MouseClicked

    private void scanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanMouseClicked
        // TODO add your handling code here:
        new mainGui(readtag).setVisible(true);
    }//GEN-LAST:event_scanMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quan_Ly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quan_Ly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quan_Ly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quan_Ly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quan_Ly().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addnew;
    private javax.swing.JLabel delete;
    private javax.swing.JLabel edit;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel refresh;
    private javax.swing.JLabel scan;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        Object[] label = {"ID", "EPC", "Name", "Birthday", "Sex", "Class"};
        DefaultTableModel defaultTable = (DefaultTableModel) table.getModel();
        Arrays.stream(label).forEach(item -> {
            defaultTable.addColumn(item);
        });

    }

    private void loadTableData() {
        deleteTable();
        dataStudent = dao.getAllStudent();
        DefaultTableModel defaultTable = (DefaultTableModel) table.getModel();
        for (Student stu : dataStudent) {
            InOut in = dao.getLastInOutById(stu.getId(), true);
            InOut out = dao.getLastInOutById(stu.getId(), false);

            if (in != null) {
                stu.setIn(in.getTime());
            }
            if (out != null) {
                stu.setOut(out.getTime());
            }

            Object[] item = {stu.getId(), stu.getEPC(), stu.getName(), stu.getBirthday(), stu.getSex() ? "Nam" : "Nữ", stu.getClasses()};
            defaultTable.addRow(item);
        }

    }

    private void deleteTable() {
        DefaultTableModel defaultTable = (DefaultTableModel) table.getModel();
        for (int i = defaultTable.getRowCount() - 1; i >= 0; i--) {
            defaultTable.removeRow(i);
        }
    }

    private String getFile() {
        fd.setFile("untitled.xls");
        fd.setVisible(true);
        String url = fd.getDirectory() + fd.getFile();
        if (url.equals("null")) {
            return null;
        }
        return url;
    }

    public void WriteExcel() {
        fd.setTitle("Xuất dữ liệu nhà cung cấp ra excel");
        String url = getFile();

        if (url == null) {
            return;
        }

        FileOutputStream outFile = null;
        ArrayList<Student> data = dao.getAllStudent();
        try {
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Sinh Viên");
            int rowNum = 0;
            HSSFRow row = sheet.createRow(rowNum);
            //Ghi Phieu Nhap
            row.createCell(0, CellType.STRING).setCellValue("ID");
            row.createCell(1, CellType.STRING).setCellValue("EPC");
            row.createCell(2, CellType.STRING).setCellValue("Họ Tên");
            row.createCell(3, CellType.STRING).setCellValue("Ngày Sinh");
            row.createCell(4, CellType.STRING).setCellValue("Giới Tính");
            row.createCell(5, CellType.STRING).setCellValue("Lớp");

            

            for (Student st : data) {
                
                rowNum++;
                row = sheet.createRow(rowNum);
                row.createCell(0, CellType.STRING).setCellValue(st.getId());
                row.createCell(1, CellType.STRING).setCellValue(st.getEPC());
                row.createCell(2, CellType.STRING).setCellValue(st.getName());
                row.createCell(3, CellType.STRING).setCellValue(st.getBirthday());
                row.createCell(4, CellType.STRING).setCellValue(st.getSex() ? "Nam":"Nữ");
                row.createCell(5, CellType.STRING).setCellValue(st.getClasses());

            }

            for (int i = 0; i < rowNum; i++) {
                sheet.autoSizeColumn(i);
            }
            
            //Input Output
            sheet = workbook.createSheet("Input_Output");
            rowNum = 0;
            row = sheet.createRow(rowNum);
            //Ghi Phieu Nhap
            row.createCell(0, CellType.STRING).setCellValue("ID");
            row.createCell(1, CellType.STRING).setCellValue("Time");
            row.createCell(2, CellType.STRING).setCellValue("Vào,Ra");
            
            ArrayList<InOut> dataIO = dao.getAllInOut();

            for (InOut io : dataIO) {
                
                rowNum++;
                row = sheet.createRow(rowNum);
                row.createCell(0, CellType.STRING).setCellValue(io.getId());
                row.createCell(1, CellType.STRING).setCellValue(io.getTime());
                row.createCell(2, CellType.STRING).setCellValue(io.isStatus() ? "Vào":"Ra");
            }

            for (int i = 0; i < rowNum; i++) {
                sheet.autoSizeColumn(i);
            }

            File file = new File(url);
            file.getParentFile().mkdirs();
            outFile = new FileOutputStream(file);
            workbook.write(outFile);
            JOptionPane.showMessageDialog(null, "Ghi file thành công: " + file.getAbsolutePath());

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        try {
            if (outFile != null) {
                outFile.close();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
