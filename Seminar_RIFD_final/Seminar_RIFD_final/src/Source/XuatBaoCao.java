/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Source;

import java.awt.Component;
import java.awt.FileDialog;
import java.io.File;
import java.util.Collections;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.Comparator;
import javax.swing.JFrame;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellType;
/**
 *
 * @author Cham Cham
 */
public class XuatBaoCao extends javax.swing.JFrame {
     FileDialog fd = new FileDialog(new JFrame(), "Xuất excel", FileDialog.SAVE);
    Dao dao = new Dao();
    ArrayList<Student> dataStudent = new ArrayList<>();
    
    ReadTags readtag;

    /**
     * Creates new form XuatBaoCao
     */
    public XuatBaoCao() {
        initComponents();
         this.setLocationRelativeTo(null);
        initTable();
        loadTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setText("Chọn Ngày:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/excel.png"))); // NOI18N
        jLabel2.setText("Xuất Báo Cáo");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("BÁO CÁO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
           // TODO add your handling code here:
        String in = jTextField1.getText().toLowerCase();

        ArrayList<Student> search = new ArrayList<>();
        for (Student stu : dataStudent) {
            if (stu.getId().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getEPC().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getName().toLowerCase().contains(in)) {
                search.add(stu);
            } else if (stu.getBirthday().contains(in)) {
                search.add(stu);
            } else if (stu.getClasses().toLowerCase().contains(in)) {
                search.add(stu);
            } else if ((stu.getSex() ? "nam" : "nữ").toLowerCase().contains(in)) {
                search.add(stu);
            }
        }

        deleteTable();
        DefaultTableModel defaultTable = (DefaultTableModel) jTable1.getModel();
        for (Student stu : search) {
            Object[] item = {stu.getId(), stu.getEPC(), stu.getName(), stu.getBirthday(), stu.getSex() ? "Nam" : "Nữ", stu.getClasses(), stu.getIn(), stu.getOut()};
            defaultTable.addRow(item);
        }
        
        
        
        
        
        /*
        DefaultTableModel tblModel=(DefaultTableModel)jTable1.getModel();
        String search =jTextField1.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr =new TableRowSorter<DefaultTableModel>(tblModel);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        */
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        /*
        try{
            export(jTable1);
        }catch(IOException e){
            System.out.println("không thể xuất");
        }
        */
        WriteExcel();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel tblModel=(DefaultTableModel)jTable1.getModel();
        
        String dt1 = tblModel.getValueAt(jTable1.getSelectedRow(),0).toString();
        String dt2 = tblModel.getValueAt(jTable1.getSelectedRow(),1).toString();
        String dt3 = tblModel.getValueAt(jTable1.getSelectedRow(),2).toString();
        String dt4 = tblModel.getValueAt(jTable1.getSelectedRow(),3).toString();
        String dt5 = tblModel.getValueAt(jTable1.getSelectedRow(),4).toString();
        String dt6 = tblModel.getValueAt(jTable1.getSelectedRow(),5).toString();
        String dt7 = tblModel.getValueAt(jTable1.getSelectedRow(),6).toString();
        String dt8 = tblModel.getValueAt(jTable1.getSelectedRow(),7).toString();
        //txtid.setText(id);
        //txtname.setText(fullname);
        //txtdob.setText(dob);
        //txtphonenumber.setText(phone);
        //txtaddress.setText(address);
        //txtemail.setText(email);
        jTextField1.setText(dt7);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XuatBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XuatBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XuatBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XuatBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XuatBaoCao().setVisible(true);
            }
        });
    }
    private String getFile() {
        fd.setFile("untitled.xls");
        fd.setVisible(true);
        String url = fd.getDirectory() + fd.getFile();
        if (url.equals("null")) {
            return null;
        }
        return url;
    }
    public void export(JTable jtable) throws IOException {

        try {

            XSSFWorkbook wb = new XSSFWorkbook();
            XSSFSheet sheet = wb.createSheet("xuatbaocao");
            XSSFRow rowcol = sheet.createRow(0);
            for (int i = 0; i < jtable.getColumnCount(); i++) {
                XSSFCell cell = rowcol.createCell(i);
                cell.setCellValue(jtable.getColumnName(i));
            }
            for (int j = 0; j < jtable.getRowCount(); j++) {
                XSSFRow row = sheet.createRow(j + 1);
                for (int k = 0; k < jtable.getColumnCount(); k++) {
                    XSSFCell cell = row.createCell(k);
                    if (jtable.getValueAt(j, k) != null) {
                        cell.setCellValue(jtable.getValueAt(j, k).toString());
                    }
                }
            }
            JFileChooser chooser = new JFileChooser();
            int i = chooser.showSaveDialog(chooser);
            File file = chooser.getSelectedFile();
            FileOutputStream out = new FileOutputStream(file + ".xlsx");
            wb.write(out);
            out.close();

        } catch (FileNotFoundException | NullPointerException ex) {
            System.out.println(ex);
            JOptionPane.showConfirmDialog(this, ex, "Lỗi", JOptionPane.CLOSED_OPTION);
        } catch (IOException io) {
            System.out.println(io);
            JOptionPane.showConfirmDialog(this, io, "Lỗi", JOptionPane.CLOSED_OPTION);
        }
    }
     public void WriteExcel() {
        fd.setTitle("Xuất dữ liệu nhà cung cấp ra excel");
        String url = getFile();

        if (url == null) {
            return;
        }

        FileOutputStream outFile = null;
        ArrayList<InOut> data = dao.getAllStudent_fil(jTextField1.getText());// chinh lai khuc nay
        try {
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Sinh Viên");
            int rowNum = 0;
            HSSFRow row = sheet.createRow(rowNum);
            //Ghi Phieu Nhap
            row.createCell(0, CellType.STRING).setCellValue("ID");
            row.createCell(1, CellType.STRING).setCellValue("TIME");
            //row.createCell(2, CellType.STRING).setCellValue("STATUS");
            /*
            row.createCell(3, CellType.STRING).setCellValue("Ngày Sinh");
            row.createCell(4, CellType.STRING).setCellValue("Giới Tính");
            row.createCell(5, CellType.STRING).setCellValue("Lớp");
            */
            

            for (InOut st : data) {
                
                rowNum++;
                row = sheet.createRow(rowNum);
                row.createCell(0, CellType.STRING).setCellValue(st.getId());
                String []arr = st.getTime().split("T");
                row.createCell(1, CellType.STRING).setCellValue(arr[0]);
               // row.createCell(2, CellType.STRING).setCellValue(st.isStatus());
               

            }

            for (int i = 0; i < rowNum; i++) {
                sheet.autoSizeColumn(i);
            }
            
            //Input Output
            sheet = workbook.createSheet("Input_Output");
            rowNum = 0;
            row = sheet.createRow(rowNum);
            //Ghi Phieu Nhap
            row.createCell(0, CellType.STRING).setCellValue("ID");
            row.createCell(1, CellType.STRING).setCellValue("Time");
            row.createCell(2, CellType.STRING).setCellValue("Vào,Ra");
            
            ArrayList<InOut> dataIO = dao.getAllInOut();

            for (InOut io : dataIO) {
                
                rowNum++;
                row = sheet.createRow(rowNum);
                row.createCell(0, CellType.STRING).setCellValue(io.getId());
                row.createCell(1, CellType.STRING).setCellValue(io.getTime());
                row.createCell(2, CellType.STRING).setCellValue(io.isStatus() ? "Vào":"Ra");
            }

            for (int i = 0; i < rowNum; i++) {
                sheet.autoSizeColumn(i);
            }

            File file = new File(url);
            file.getParentFile().mkdirs();
            outFile = new FileOutputStream(file);
            workbook.write(outFile);
            JOptionPane.showMessageDialog(null, "Ghi file thành công: " + file.getAbsolutePath());

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        try {
            if (outFile != null) {
                outFile.close();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     private void initTable() {
        Object[] label = {"ID", "EPC", "Name", "Birthday", "Sex", "Class", "In", "Out"};
        DefaultTableModel defaultTable = (DefaultTableModel) jTable1.getModel();
        Arrays.stream(label).forEach(item -> {
            defaultTable.addColumn(item);
        });

    }

    private void loadTableData() {
        deleteTable();
        dataStudent = dao.getAllStudent();
        DefaultTableModel defaultTable = (DefaultTableModel) jTable1.getModel();
        for (Student stu : dataStudent) {
            InOut in = dao.getLastInOutById(stu.getId(), true);
            InOut out = dao.getLastInOutById(stu.getId(), false);

            if (in != null) {
                stu.setIn(in.getTime());
            }
            if (out != null) {
                stu.setOut(out.getTime());
            }

            Object[] item = {stu.getId(), stu.getEPC(), stu.getName(), stu.getBirthday(), stu.getSex() ? "Nam" : "Nữ", stu.getClasses(), in == null ? "" : in.getTime(), out == null ? "" : out.getTime()};
            defaultTable.addRow(item);
        }

    }

    private void deleteTable() {
        DefaultTableModel defaultTable = (DefaultTableModel) jTable1.getModel();
        for (int i = defaultTable.getRowCount() - 1; i >= 0; i--) {
            defaultTable.removeRow(i);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void writeExcel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
  
}
